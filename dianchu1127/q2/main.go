package main

//【系统设计】问答题：数据库存有一张表，需要提供给若干个平台(vwb服务)查询，需要对数据进行
//相关处理，需要保证数据没有重复，上游有一个服务用于收集数据，中游有一个服务用于数据传递通
//道，下游有一个数据入库的一个服务(数据库类型不定)假设上游服务、数据没有发生重复，在中游服
//务因为考虑到高可用性，数据在某个时间段内（假设5分钟)会存在重复数据，下游服务应该如何处理，
//说说优缺点。

//todo
//在处理上游服务到下游服务的数据传递过程中，中游服务因为高可用性的考虑，可能会出现某个时间段内的重复数据。
//下游服务需要采取一些措施来处理这种情况。以下是一些可能的处理方式，以及它们的优缺点：

/*
幂等性设计：

优点： 下游服务设计为幂等，即相同的输入数据多次处理结果相同，不会引起数据的变化。
缺点： 幂等性设计可能会增加系统的复杂性，特别是对于一些业务逻辑较为复杂的场景。
数据去重缓存：

优点： 中游服务在传递数据时，将已经传递过的数据缓存起来，并在一定时间后清除，确保数据不会被重复处理。
缺点： 需要维护缓存系统，可能会增加系统的复杂性和资源占用。
时间窗口去重：

优点： 在一定时间窗口内，相同的数据只会被处理一次。
缺点： 需要对时间窗口进行合理的设置，可能存在某些极端情况下的处理不准确性。
消息队列实现去重：

优点： 利用消息队列的去重机制，确保相同的消息在一段时间内只会被处理一次。
缺点： 引入消息队列可能增加了系统的复杂性，并需要考虑消息队列的可用性和性能。
*/
